.skills {
	background: linear-gradient(to bottom, #f9f9ff 5%, #fff 10%, $secondary 90%, $lightBlue 95%);
	position: relative;
	&:after {
		@include scallops (radial-gradient(circle at 50% 0%, transparent 25%, rgba(0,0,0,.1) 26%, white 30%), 0);
	}
	h2 {
		width:100%;
		@supports (display: grid) {
			grid-column: 5;
			grid-row: 1 / span 2;
		}
	}
}

.skills-container {
	//Flexbox Fallback
	display: flex;
	flex-wrap: wrap;
	justify-content: space-between;
	flex-basis: 230px;
	flex-grow: 1;

	//If grid supported, create complex layout
    @supports (display:grid) {
		display: grid;
	  	grid-template-columns: 1fr repeat(4, calc(25vw - 40px)) 1fr;
		grid-template-rows: repeat(4, calc(25vw - 40px));
		align-items: center;
		justify-items: center;
		//At width of wrapper, set fixed height and width to maintain size within wrapper
		@media (min-width: 1140px) {
			grid-template-columns: 1fr repeat(4, 285px) 1fr;
			grid-template-rows: repeat(4, 285px);
		}
		@media (max-width: 768px) {
				display: flex;
				flex-wrap: wrap;
				h2 {
					width: 100%;
				}
		}
    }
}

.outside {
	//Flexbox fallback to single row
    position: relative;
    padding: 20px;
    width: calc((100% / 3) - 20px);
	border-top: 4px dashed $gradientPink;
	border-bottom: 4px dashed $gradientPink;
	border-left: 4px dashed $gradientYellow;
	border-right: 4px dashed $gradientYellow;
    @media (max-width: 680px) {
        border-bottom: none;
        border-top: none;
        width: 100%;
        margin-bottom: 20px;
	}
	//If grid supported, create diamond layout
    @supports (display: grid) {
        width: calc(100% - 35%);
		height: calc(100% - 35%);
		transform: rotate(45deg);
		@media (max-width: 768px) {
			// width: calc((100% / 3) - 20px);
			height: initial;
			transform: none;
			flex-basis: 230px;
			flex-grow: 1;
		}
	}
}

@media (max-width: 768px) {
	.outside.one {
		margin-right: 10px;
	}
	.outside.three {
		margin-top: 10px;
	}
}

@media (max-width: 550px) {
	.outside.one {
		margin-right: 0;
	}
}
//Position diamonds on grid layout
@supports (display: grid) {
    .one {
        grid-column: 2 / span 2;
		grid-row: 1 / span 2;
    }
    .two {
        grid-column: 3 / span 2;
        grid-row: 2 / span 2;
    }
    .three {
        grid-column: 4 / span 2;
        grid-row: 3 / span 2;
    }
}

.box {
	width: 100%;
	height: 100%;
	padding: 20px;
  	display: flex;
  	align-items: center;
   	justify-content: center;
	text-align: center;
	background: $secondary;
    box-shadow: 0px 0px 20px 0px rgba(176, 176, 176, 0.2);
    .text-container {
        @supports (display: grid) {
			transform: rotate(-45deg);
			@media (max-width: 984px) {
				h3 {
					margin: 5px;
				}
				p {
					margin: 2px;
				}
			}
			@media (max-width: 768px) {
				height: initial;
				transform: none;
				h3 {
					margin: 10px;
				}
				p {
					margin: 5px;
				}
			}
		}
    }
   	h3 {
		font-size: 2rem;
   		// font-size: calc(18px + (28 - 18) * ((100vw - 768px) / (1600 - 768)));
   	}
   	p {
		font-size: 1.4rem;
   		// font-size: calc(14px + (22 - 14) * ((100vw - 768px) / (1600 - 768)));
   	}

// Border for diamond shapes

.corner {
	width: 20%;
	height: 20%;
	position: absolute;
	&.one, 
	&.two {
	 -moz-border-image: -moz-linear-gradient(top, $gradientPink 0%, $gradientYellow 100%);
  -webkit-border-image: -webkit-linear-gradient(top,$gradientPink 0%, $gradientYellow 100%);
	  border-image: linear-gradient(to bottom, $gradientPink 0%, $gradientYellow 100%);
	  border-image-slice: 1;
	}
	&.three,
	&.four {
		 -moz-border-image: -moz-linear-gradient(top, $gradientYellow 0%, $gradientPink 100%);
  -webkit-border-image: -webkit-linear-gradient(top,$gradientYellow 0%, $gradientPink 100%);
	  border-image: linear-gradient(to bottom, $gradientYellow 0%, $gradientPink 100%);
	  border-image-slice: 1;
	}
	&.one {
		border-top: 4px solid transparent;
		border-left: 4px solid transparent;
		// border-bottom: 0px;
		// border-right: 0px;
		left: -4px;
		top: -4px;
	}
	&.two {
		border-top: 4px solid transparent;
		border-right: 4px solid transparent;
		right: -4px;
		top:-4px;
	}
	&.three {
		border-bottom: 4px solid transparent;
		border-left: 4px solid transparent;
		bottom: -4px;
		left: -4px;
	}
	&.four {
		border-bottom: 4px solid transparent;
		border-right: 4px solid transparent;
		bottom: -4px;
		right: -4px;
	}
}
}